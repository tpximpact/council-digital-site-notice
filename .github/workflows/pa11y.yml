name: Accessibility Tests

on:
  pull_request:
    branches: [main]
env:
  NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
  NEXT_PUBLIC_SANITY_SECRET_TOKEN: ${{ secrets.TEST_ENV_SANITY_TOKEN }}
  NEXT_PUBLIC_SANITY_DATASET: staging
  NEXT_PUBLIC_API_MOCKING: enabled
jobs:
  pa11y:
    runs-on: ubuntu-latest

    container:
      image: buildkite/puppeteer:10.0.0

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build the application
        env:
          NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ vars.NEXT_PUBLIC_SANITY_PROJECT_ID }}
          NEXT_PUBLIC_SANITY_SECRET_TOKEN: ${{ vars.TEST_ENV_SANITY_TOKEN }}
          NEXT_PUBLIC_SANITY_DATASET: staging
          NEXT_PUBLIC_API_MOCKING: enabled
        run: yarn build

      - name: Start the application and get port
        run: |
          yarn start & echo $! > pid.txt
          sleep 10
          PORT=$(lsof -i -P -n | grep LISTEN | grep node | awk '{print $9}' | cut -d ':' -f 2)
          echo "Application is running on port: $PORT"
          echo "PORT=$PORT" >> $GITHUB_ENV

      - name: Use the port
        run: |
          echo "The application is running on port ${{ env.PORT }}"
          # You can use ${{ env.PORT }} in subsequent steps

      - name: Install and run pa11y-ci
        run: |
          yarn global add pa11y-ci
          yarn pa11y-ci --config .pa11yci

      - name: Stop the application
        run: kill $(cat pid.txt)
